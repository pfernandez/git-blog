"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/*! `swift` grammar compiled for Highlight.js 11.4.0 */
var hljsGrammar = function () {
  "use strict";

  function e(e) {
    return e ? "string" == typeof e ? e : e.source : null;
  }

  function a(e) {
    return t("(?=", e, ")");
  }

  function t() {
    for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {
      a[_key] = arguments[_key];
    }

    return a.map(function (a) {
      return e(a);
    }).join("");
  }

  function n() {
    for (var _len2 = arguments.length, a = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      a[_key2] = arguments[_key2];
    }

    var t = function (e) {
      var a = e[e.length - 1];
      return "object" == _typeof(a) && a.constructor === Object ? (e.splice(e.length - 1, 1), a) : {};
    }(a);

    return "(" + (t.capture ? "" : "?:") + a.map(function (a) {
      return e(a);
    }).join("|") + ")";
  }

  var i = function i(e) {
    return t(/\b/, e, /\w$/.test(e) ? /\b/ : /\B/);
  },
      s = ["Protocol", "Type"].map(i),
      u = ["init", "self"].map(i),
      c = ["Any", "Self"],
      r = ["actor", "associatedtype", "async", "await", /as\?/, /as!/, "as", "break", "case", "catch", "class", "continue", "convenience", "default", "defer", "deinit", "didSet", "do", "dynamic", "else", "enum", "extension", "fallthrough", /fileprivate\(set\)/, "fileprivate", "final", "for", "func", "get", "guard", "if", "import", "indirect", "infix", /init\?/, /init!/, "inout", /internal\(set\)/, "internal", "in", "is", "isolated", "nonisolated", "lazy", "let", "mutating", "nonmutating", /open\(set\)/, "open", "operator", "optional", "override", "postfix", "precedencegroup", "prefix", /private\(set\)/, "private", "protocol", /public\(set\)/, "public", "repeat", "required", "rethrows", "return", "set", "some", "static", "struct", "subscript", "super", "switch", "throws", "throw", /try\?/, /try!/, "try", "typealias", /unowned\(safe\)/, /unowned\(unsafe\)/, "unowned", "var", "weak", "where", "while", "willSet"],
      o = ["false", "nil", "true"],
      l = ["assignment", "associativity", "higherThan", "left", "lowerThan", "none", "right"],
      m = ["#colorLiteral", "#column", "#dsohandle", "#else", "#elseif", "#endif", "#error", "#file", "#fileID", "#fileLiteral", "#filePath", "#function", "#if", "#imageLiteral", "#keyPath", "#line", "#selector", "#sourceLocation", "#warn_unqualified_access", "#warning"],
      p = ["abs", "all", "any", "assert", "assertionFailure", "debugPrint", "dump", "fatalError", "getVaList", "isKnownUniquelyReferenced", "max", "min", "numericCast", "pointwiseMax", "pointwiseMin", "precondition", "preconditionFailure", "print", "readLine", "repeatElement", "sequence", "stride", "swap", "swift_unboxFromSwiftValueWithType", "transcode", "type", "unsafeBitCast", "unsafeDowncast", "withExtendedLifetime", "withUnsafeMutablePointer", "withUnsafePointer", "withVaList", "withoutActuallyEscaping", "zip"],
      d = n(/[/=\-+!*%<>&|^~?]/, /[\u00A1-\u00A7]/, /[\u00A9\u00AB]/, /[\u00AC\u00AE]/, /[\u00B0\u00B1]/, /[\u00B6\u00BB\u00BF\u00D7\u00F7]/, /[\u2016-\u2017]/, /[\u2020-\u2027]/, /[\u2030-\u203E]/, /[\u2041-\u2053]/, /[\u2055-\u205E]/, /[\u2190-\u23FF]/, /[\u2500-\u2775]/, /[\u2794-\u2BFF]/, /[\u2E00-\u2E7F]/, /[\u3001-\u3003]/, /[\u3008-\u3020]/, /[\u3030]/),
      F = n(d, /[\u0300-\u036F]/, /[\u1DC0-\u1DFF]/, /[\u20D0-\u20FF]/, /[\uFE00-\uFE0F]/, /[\uFE20-\uFE2F]/),
      b = t(d, F, "*"),
      h = n(/[a-zA-Z_]/, /[\u00A8\u00AA\u00AD\u00AF\u00B2-\u00B5\u00B7-\u00BA]/, /[\u00BC-\u00BE\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF]/, /[\u0100-\u02FF\u0370-\u167F\u1681-\u180D\u180F-\u1DBF]/, /[\u1E00-\u1FFF]/, /[\u200B-\u200D\u202A-\u202E\u203F-\u2040\u2054\u2060-\u206F]/, /[\u2070-\u20CF\u2100-\u218F\u2460-\u24FF\u2776-\u2793]/, /[\u2C00-\u2DFF\u2E80-\u2FFF]/, /[\u3004-\u3007\u3021-\u302F\u3031-\u303F\u3040-\uD7FF]/, /[\uF900-\uFD3D\uFD40-\uFDCF\uFDF0-\uFE1F\uFE30-\uFE44]/, /[\uFE47-\uFEFE\uFF00-\uFFFD]/),
      f = n(h, /\d/, /[\u0300-\u036F\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]/),
      w = t(h, f, "*"),
      y = t(/[A-Z]/, f, "*"),
      g = ["autoclosure", t(/convention\(/, n("swift", "block", "c"), /\)/), "discardableResult", "dynamicCallable", "dynamicMemberLookup", "escaping", "frozen", "GKInspectable", "IBAction", "IBDesignable", "IBInspectable", "IBOutlet", "IBSegueAction", "inlinable", "main", "nonobjc", "NSApplicationMain", "NSCopying", "NSManaged", t(/objc\(/, w, /\)/), "objc", "objcMembers", "propertyWrapper", "requires_stored_property_inits", "resultBuilder", "testable", "UIApplicationMain", "unknown", "usableFromInline"],
      E = ["iOS", "iOSApplicationExtension", "macOS", "macOSApplicationExtension", "macCatalyst", "macCatalystApplicationExtension", "watchOS", "watchOSApplicationExtension", "tvOS", "tvOSApplicationExtension", "swift"];

  return function (e) {
    var d = {
      match: /\s+/,
      relevance: 0
    },
        h = e.COMMENT("/\\*", "\\*/", {
      contains: ["self"]
    }),
        v = [e.C_LINE_COMMENT_MODE, h],
        A = {
      match: [/\./, n.apply(void 0, _toConsumableArray(s).concat(_toConsumableArray(u)))],
      className: {
        2: "keyword"
      }
    },
        N = {
      match: t(/\./, n.apply(void 0, r)),
      relevance: 0
    },
        C = r.filter(function (e) {
      return "string" == typeof e;
    }).concat(["_|0"]),
        D = {
      variants: [{
        className: "keyword",
        match: n.apply(void 0, _toConsumableArray(r.filter(function (e) {
          return "string" != typeof e;
        }).concat(c).map(i)).concat(_toConsumableArray(u)))
      }]
    },
        k = {
      $pattern: n(/\b\w+/, /#\w+/),
      keyword: C.concat(m),
      literal: o
    },
        B = [A, N, D],
        _ = [{
      match: t(/\./, n.apply(void 0, p)),
      relevance: 0
    }, {
      className: "built_in",
      match: t(/\b/, n.apply(void 0, p), /(?=\()/)
    }],
        S = {
      match: /->/,
      relevance: 0
    },
        M = [S, {
      className: "operator",
      relevance: 0,
      variants: [{
        match: b
      }, {
        match: "\\.(\\.|".concat(F, ")+")
      }]
    }],
        x = "([0-9a-fA-F]_*)+",
        I = {
      className: "number",
      relevance: 0,
      variants: [{
        match: "\\b(([0-9]_*)+)(\\.(([0-9]_*)+))?([eE][+-]?(([0-9]_*)+))?\\b"
      }, {
        match: "\\b0x(".concat(x, ")(\\.(").concat(x, "))?([pP][+-]?(([0-9]_*)+))?\\b")
      }, {
        match: /\b0o([0-7]_*)+\b/
      }, {
        match: /\b0b([01]_*)+\b/
      }]
    },
        O = function O() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return {
        className: "subst",
        variants: [{
          match: t(/\\/, e, /[0\\tnr"']/)
        }, {
          match: t(/\\/, e, /u\{[0-9a-fA-F]{1,8}\}/)
        }]
      };
    },
        L = function L() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return {
        className: "subst",
        match: t(/\\/, e, /[\t ]*(?:[\r\n]|\r\n)/)
      };
    },
        T = function T() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return {
        className: "subst",
        label: "interpol",
        begin: t(/\\/, e, /\(/),
        end: /\)/
      };
    },
        $ = function $() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return {
        begin: t(e, /"""/),
        end: t(/"""/, e),
        contains: [O(e), L(e), T(e)]
      };
    },
        j = function j() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return {
        begin: t(e, /"/),
        end: t(/"/, e),
        contains: [O(e), T(e)]
      };
    },
        P = {
      className: "string",
      variants: [$(), $("#"), $("##"), $("###"), j(), j("#"), j("##"), j("###")]
    },
        K = {
      match: t(/`/, w, /`/)
    },
        z = [K, {
      className: "variable",
      match: /\$\d+/
    }, {
      className: "variable",
      match: "\\$".concat(f, "+")
    }],
        q = [{
      match: /(@|#(un)?)available/,
      className: "keyword",
      starts: {
        contains: [{
          begin: /\(/,
          end: /\)/,
          keywords: E,
          contains: [].concat(M, [I, P])
        }]
      }
    }, {
      className: "keyword",
      match: t(/@/, n.apply(void 0, g))
    }, {
      className: "meta",
      match: t(/@/, w)
    }],
        U = {
      match: a(/\b[A-Z]/),
      relevance: 0,
      contains: [{
        className: "type",
        match: t(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/, f, "+")
      }, {
        className: "type",
        match: y,
        relevance: 0
      }, {
        match: /[?!]+/,
        relevance: 0
      }, {
        match: /\.\.\./,
        relevance: 0
      }, {
        match: t(/\s+&\s+/, a(y)),
        relevance: 0
      }]
    },
        Z = {
      begin: /</,
      end: />/,
      keywords: k,
      contains: [].concat(v, B, q, [S, U])
    };

    U.contains.push(Z);
    var G = {
      begin: /\(/,
      end: /\)/,
      relevance: 0,
      keywords: k,
      contains: ["self", {
        match: t(w, /\s*:/),
        keywords: "_|0",
        relevance: 0
      }].concat(v, B, _, M, [I, P], z, q, [U])
    },
        V = {
      begin: /</,
      end: />/,
      contains: [].concat(v, [U])
    },
        W = {
      begin: /\(/,
      end: /\)/,
      keywords: k,
      contains: [{
        begin: n(a(t(w, /\s*:/)), a(t(w, /\s+/, w, /\s*:/))),
        end: /:/,
        relevance: 0,
        contains: [{
          className: "keyword",
          match: /\b_\b/
        }, {
          className: "params",
          match: w
        }]
      }].concat(v, B, M, [I, P], q, [U, G]),
      endsParent: !0,
      illegal: /["']/
    },
        R = {
      match: [/func/, /\s+/, n(K.match, w, b)],
      className: {
        1: "keyword",
        3: "title.function"
      },
      contains: [V, W, d],
      illegal: [/\[/, /%/]
    },
        X = {
      match: [/\b(?:subscript|init[?!]?)/, /\s*(?=[<(])/],
      className: {
        1: "keyword"
      },
      contains: [V, W, d],
      illegal: /\[|%/
    },
        H = {
      match: [/operator/, /\s+/, b],
      className: {
        1: "keyword",
        3: "title"
      }
    },
        J = {
      begin: [/precedencegroup/, /\s+/, y],
      className: {
        1: "keyword",
        3: "title"
      },
      contains: [U],
      keywords: [].concat(l, o),
      end: /}/
    };

    var _iterator = _createForOfIteratorHelper(P.variants),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _e = _step.value;

        var _a = _e.contains.find(function (e) {
          return "interpol" === e.label;
        });

        _a.keywords = k;

        var _t = [].concat(B, _, M, [I, P], z);

        _a.contains = [].concat(_toConsumableArray(_t), [{
          begin: /\(/,
          end: /\)/,
          contains: ["self"].concat(_toConsumableArray(_t))
        }]);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return {
      name: "Swift",
      keywords: k,
      contains: [].concat(v, [R, X, {
        beginKeywords: "struct protocol class extension enum actor",
        end: "\\{",
        excludeEnd: !0,
        keywords: k,
        contains: [e.inherit(e.TITLE_MODE, {
          className: "title.class",
          begin: /[A-Za-z$_][\u00C0-\u02B80-9A-Za-z$_]*/
        })].concat(B)
      }, H, J, {
        beginKeywords: "import",
        end: /$/,
        contains: [].concat(v),
        relevance: 0
      }], B, _, M, [I, P], z, q, [U, G])
    };
  };
}();

var _default = hljsGrammar;
exports["default"] = _default;