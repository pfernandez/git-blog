"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

/*! `ini` grammar compiled for Highlight.js 11.4.0 */
var hljsGrammar = function () {
  "use strict";

  return function (e) {
    var n = e.regex,
        a = {
      className: "number",
      relevance: 0,
      variants: [{
        begin: /([+-]+)?[\d]+_[\d_]+/
      }, {
        begin: e.NUMBER_RE
      }]
    },
        s = e.COMMENT();
    s.variants = [{
      begin: /;/,
      end: /$/
    }, {
      begin: /#/,
      end: /$/
    }];
    var i = {
      className: "variable",
      variants: [{
        begin: /\$[\w\d"][\w\d_]*/
      }, {
        begin: /\$\{(.*?)\}/
      }]
    },
        r = {
      className: "literal",
      begin: /\bon|off|true|false|yes|no\b/
    },
        t = {
      className: "string",
      contains: [e.BACKSLASH_ESCAPE],
      variants: [{
        begin: "'''",
        end: "'''",
        relevance: 10
      }, {
        begin: '"""',
        end: '"""',
        relevance: 10
      }, {
        begin: '"',
        end: '"'
      }, {
        begin: "'",
        end: "'"
      }]
    },
        l = {
      begin: /\[/,
      end: /\]/,
      contains: [s, r, i, t, a, "self"],
      relevance: 0
    },
        c = n.either(/[A-Za-z0-9_-]+/, /"(\\"|[^"])*"/, /'[^']*'/);
    return {
      name: "TOML, also INI",
      aliases: ["toml"],
      case_insensitive: !0,
      illegal: /\S/,
      contains: [s, {
        className: "section",
        begin: /\[+/,
        end: /\]+/
      }, {
        begin: n.concat(c, "(\\s*\\.\\s*", c, ")*", n.lookahead(/\s*=\s*[^#\s]/)),
        className: "attr",
        starts: {
          end: /$/,
          contains: [s, l, r, i, t, a]
        }
      }]
    };
  };
}();

var _default = hljsGrammar;
exports["default"] = _default;