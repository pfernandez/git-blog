"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/*! `twig` grammar compiled for Highlight.js 11.4.0 */
var hljsGrammar = function () {
  "use strict";

  return function (e) {
    var a = e.regex,
        n = ["attribute", "block", "constant", "country_timezones", "cycle", "date", "dump", "html_classes", "include", "max", "min", "parent", "random", "range", "source", "template_from_string"];
    var t = ["apply", "autoescape", "block", "cache", "deprecated", "do", "embed", "extends", "filter", "flush", "for", "from", "if", "import", "include", "macro", "sandbox", "set", "use", "verbatim", "with"];
    t = t.concat(t.map(function (e) {
      return "end" + e;
    }));

    var r = {
      scope: "string",
      variants: [{
        begin: /'/,
        end: /'/
      }, {
        begin: /"/,
        end: /"/
      }]
    },
        c = {
      scope: "number",
      match: /\d+/
    },
        o = {
      begin: /\(/,
      end: /\)/,
      excludeBegin: !0,
      excludeEnd: !0,
      contains: [r, c]
    },
        s = {
      beginKeywords: n.join(" "),
      keywords: {
        name: n
      },
      relevance: 0,
      contains: [o]
    },
        m = {
      match: /\|(?=[A-Za-z_]+:?)/,
      beginScope: "punctuation",
      relevance: 0,
      contains: [{
        match: /[A-Za-z_]+:?/,
        keywords: ["abs", "batch", "capitalize", "column", "convert_encoding", "country_name", "currency_name", "currency_symbol", "data_uri", "date", "date_modify", "default", "escape", "filter", "first", "format", "format_currency", "format_date", "format_datetime", "format_number", "format_time", "html_to_markdown", "inky_to_html", "inline_css", "join", "json_encode", "keys", "language_name", "last", "length", "locale_name", "lower", "map", "markdown", "markdown_to_html", "merge", "nl2br", "number_format", "raw", "reduce", "replace", "reverse", "round", "slice", "slug", "sort", "spaceless", "split", "striptags", "timezone_name", "title", "trim", "u|0", "upper", "url_encode"]
      }]
    },
        i = function i(e, _ref) {
      var n = _ref.relevance;
      return {
        beginScope: {
          1: "template-tag",
          3: "name"
        },
        relevance: n || 2,
        endScope: "template-tag",
        begin: [/\{%/, /\s*/, a.either.apply(a, _toConsumableArray(e))],
        end: /%\}/,
        keywords: "in",
        contains: [m, s, r, c]
      };
    },
        l = i(t, {
      relevance: 2
    }),
        d = i([/[a-z_]+/], {
      relevance: 1
    });

    return {
      name: "Twig",
      aliases: ["craftcms"],
      case_insensitive: !0,
      subLanguage: "xml",
      contains: [e.COMMENT(/\{#/, /#\}/), l, d, {
        className: "template-variable",
        begin: /\{\{/,
        end: /\}\}/,
        contains: ["self", m, s, r, c]
      }]
    };
  };
}();

var _default = hljsGrammar;
exports["default"] = _default;