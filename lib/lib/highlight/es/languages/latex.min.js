"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/*! `latex` grammar compiled for Highlight.js 11.4.0 */
var hljsGrammar = function () {
  "use strict";

  return function (e) {
    var _e$regex, _ref;

    var a = [{
      begin: /\^{6}[0-9a-f]{6}/
    }, {
      begin: /\^{5}[0-9a-f]{5}/
    }, {
      begin: /\^{4}[0-9a-f]{4}/
    }, {
      begin: /\^{3}[0-9a-f]{3}/
    }, {
      begin: /\^{2}[0-9a-f]{2}/
    }, {
      begin: /\^{2}[\u0000-\u007f]/
    }],
        n = [{
      className: "keyword",
      begin: /\\/,
      relevance: 0,
      contains: [{
        endsParent: !0,
        begin: (_e$regex = e.regex).either.apply(_e$regex, _toConsumableArray(["(?:NeedsTeXFormat|RequirePackage|GetIdInfo)", "Provides(?:Expl)?(?:Package|Class|File)", "(?:DeclareOption|ProcessOptions)", "(?:documentclass|usepackage|input|include)", "makeat(?:letter|other)", "ExplSyntax(?:On|Off)", "(?:new|renew|provide)?command", "(?:re)newenvironment", "(?:New|Renew|Provide|Declare)(?:Expandable)?DocumentCommand", "(?:New|Renew|Provide|Declare)DocumentEnvironment", "(?:(?:e|g|x)?def|let)", "(?:begin|end)", "(?:part|chapter|(?:sub){0,2}section|(?:sub)?paragraph)", "caption", "(?:label|(?:eq|page|name)?ref|(?:paren|foot|super)?cite)", "(?:alpha|beta|[Gg]amma|[Dd]elta|(?:var)?epsilon|zeta|eta|[Tt]heta|vartheta)", "(?:iota|(?:var)?kappa|[Ll]ambda|mu|nu|[Xx]i|[Pp]i|varpi|(?:var)rho)", "(?:[Ss]igma|varsigma|tau|[Uu]psilon|[Pp]hi|varphi|chi|[Pp]si|[Oo]mega)", "(?:frac|sum|prod|lim|infty|times|sqrt|leq|geq|left|right|middle|[bB]igg?)", "(?:[lr]angle|q?quad|[lcvdi]?dots|d?dot|hat|tilde|bar)"].map(function (e) {
          return e + "(?![a-zA-Z@:_])";
        })))
      }, {
        endsParent: !0,
        begin: RegExp(["(?:__)?[a-zA-Z]{2,}_[a-zA-Z](?:_?[a-zA-Z])+:[a-zA-Z]*", "[lgc]__?[a-zA-Z](?:_?[a-zA-Z])*_[a-zA-Z]{2,}", "[qs]__?[a-zA-Z](?:_?[a-zA-Z])+", "use(?:_i)?:[a-zA-Z]*", "(?:else|fi|or):", "(?:if|cs|exp):w", "(?:hbox|vbox):n", "::[a-zA-Z]_unbraced", "::[a-zA-Z:]"].map(function (e) {
          return e + "(?![a-zA-Z:_])";
        }).join("|"))
      }, {
        endsParent: !0,
        variants: a
      }, {
        endsParent: !0,
        relevance: 0,
        variants: [{
          begin: /[a-zA-Z@]+/
        }, {
          begin: /[^a-zA-Z@]?/
        }]
      }]
    }, {
      className: "params",
      relevance: 0,
      begin: /#+\d?/
    }, {
      variants: a
    }, {
      className: "built_in",
      relevance: 0,
      begin: /[$&^_]/
    }, {
      className: "meta",
      begin: /% ?!(T[eE]X|tex|BIB|bib)/,
      end: "$",
      relevance: 10
    }, e.COMMENT("%", "$", {
      relevance: 0
    })],
        i = {
      begin: /\{/,
      end: /\}/,
      relevance: 0,
      contains: ["self"].concat(n)
    },
        t = e.inherit(i, {
      relevance: 0,
      endsParent: !0,
      contains: [i].concat(n)
    }),
        r = {
      begin: /\[/,
      end: /\]/,
      endsParent: !0,
      relevance: 0,
      contains: [i].concat(n)
    },
        s = {
      begin: /\s+/,
      relevance: 0
    },
        c = [t],
        l = [r],
        o = function o(e, a) {
      return {
        contains: [s],
        starts: {
          relevance: 0,
          contains: e,
          starts: a
        }
      };
    },
        d = function d(e, a) {
      return {
        begin: "\\\\" + e + "(?![a-zA-Z@:_])",
        keywords: {
          $pattern: /\\[a-zA-Z]+/,
          keyword: "\\" + e
        },
        relevance: 0,
        contains: [s],
        starts: a
      };
    },
        m = function m(a, n) {
      return e.inherit({
        begin: "\\\\begin(?=[ \t]*(\\r?\\n[ \t]*)?\\{" + a + "\\})",
        keywords: {
          $pattern: /\\[a-zA-Z]+/,
          keyword: "\\begin"
        },
        relevance: 0
      }, o(c, n));
    },
        g = function g() {
      var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "string";
      return e.END_SAME_AS_BEGIN({
        className: a,
        begin: /(.|\r?\n)/,
        end: /(.|\r?\n)/,
        excludeBegin: !0,
        excludeEnd: !0,
        endsParent: !0
      });
    },
        b = function b(e) {
      return {
        className: "string",
        end: "(?=\\\\end\\{" + e + "\\})"
      };
    },
        p = function p() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "string";
      return {
        relevance: 0,
        begin: /\{/,
        starts: {
          endsParent: !0,
          contains: [{
            className: e,
            end: /(?=\})/,
            endsParent: !0,
            contains: [{
              begin: /\{/,
              end: /\}/,
              relevance: 0,
              contains: ["self"]
            }]
          }]
        }
      };
    };

    return {
      name: "LaTeX",
      aliases: ["tex"],
      contains: [].concat(_toConsumableArray(["verb", "lstinline"].map(function (e) {
        return d(e, {
          contains: [g()]
        });
      })), [d("mint", o(c, {
        contains: [g()]
      })), d("mintinline", o(c, {
        contains: [p(), g()]
      })), d("url", {
        contains: [p("link"), p("link")]
      }), d("hyperref", {
        contains: [p("link")]
      }), d("href", o(l, {
        contains: [p("link")]
      }))], _toConsumableArray((_ref = []).concat.apply(_ref, _toConsumableArray(["", "\\*"].map(function (e) {
        return [m("verbatim" + e, b("verbatim" + e)), m("filecontents" + e, o(c, b("filecontents" + e)))].concat(_toConsumableArray(["", "B", "L"].map(function (a) {
          return m(a + "Verbatim" + e, o(l, b(a + "Verbatim" + e)));
        })));
      })))), [m("minted", o(l, o(c, b("minted"))))], n)
    };
  };
}();

var _default = hljsGrammar;
exports["default"] = _default;